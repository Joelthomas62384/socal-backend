name: Deploy Django App to AWS EC2

on:
  push:
    branches:
      - main  # Trigger deployment on pushes to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Create .env File from Secrets
        run: |
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" > .env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "DEBUG=${{ secrets.DEBUG }}" >> .env
          echo "EC2_USER=${{ secrets.EC2_USER }}" >> .env
          echo "FRONT_END=${{ secrets.FRONT_END }}" >> .env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> .env

      - name: Build and push Docker image
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/friendbook:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/friendbook:latest

      - name: Setup SSH and Deploy to EC2
        env:
          EC2_PEM_KEY: ${{ secrets.AWS_EC2_KEY }}
          EC2_HOST: ${{ secrets.AWS_EC2_IP }}
          EC2_USER: ${{ secrets.EC2_USER }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          # Create SSH key file
          echo "$EC2_PEM_KEY" > ec2-key.pem
          chmod 600 ec2-key.pem
      
          # Connect to EC2 instance and deploy
          ssh -o StrictHostKeyChecking=no -i ec2-key.pem "$EC2_USER@$EC2_HOST" << 'EOF'
            set -e  # Exit on any error
            echo "Starting deployment on EC2..."
      
            # Export environment variables
            export DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}
            export DOCKER_PASSWORD=${{ secrets.DOCKER_PASSWORD }}
      
            # Docker login
            echo "$DOCKER_PASSWORD" | sudo docker login -u "$DOCKER_USERNAME" --password-stdin
      
            # Pull latest Docker images
            docker pull $DOCKER_USERNAME/friendbook:latest
          
          # Stop and remove existing containers if they exist
            docker stop friendbook
            docker rm friendbook
      
            # Run Django application
            echo "Starting Django container..."
            # Stop and remove existing containers if they exist
            
          
            # Run Django application
            echo "Starting Django container..."
            docker run -d --name friendbook -p 80:8000  $DOCKER_USERNAME/friendbook:latest
      
          
      
            echo "Deployment complete!"
          EOF
        
      - name: Clean Up
        run: rm -f ec2-key.pem
        