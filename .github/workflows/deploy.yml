name: Deploy Django App to Azure VM

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Create .env File from Secrets
        run: |
          cat << EOF > .env
          AZURE_ACCOUNT_KEY=${{ secrets.AZURE_ACCOUNT_KEY }}
          AZURE_ACCOUNT_NAME=${{ secrets.AZURE_ACCOUNT_NAME }}
          AZURE_CONNECTION_STRING=${{ secrets.AZURE_CONNECTION_STRING }}
          AZURE_MEDIA_CONTAINER=${{ secrets.AZURE_MEDIA_CONTAINER }}
          AZURE_STATIC_CONTAINER=${{ secrets.AZURE_STATIC_CONTAINER }}
          CELERY_BROKER_URL=${{ secrets.CELERY_BROKER_URL }}
          CELERY_RESULT_BACKEND=${{ secrets.CELERY_RESULT_BACKEND }}
          DB_HOST=${{ secrets.DB_HOST }}
          DB_NAME=${{ secrets.DB_NAME }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          DB_USER=${{ secrets.DB_USER }}
          DEBUG=${{ secrets.DEBUG }}
          DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}
          EOF

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Images
        run: |
          docker-compose -f docker-compose.yml build
          docker-compose -f docker-compose.yml push

      - name: Deploy to Azure VM using Docker Compose
        env:
          VM_KEY: ${{ secrets.VM_KEY }}
          VM_IP: ${{ secrets.VM_IP }}
          VM_USER: ${{ secrets.VM_USER }}
        run: |
          # Prepare SSH key
          echo "$VM_KEY" > azure-vm-key.pem
          chmod 600 azure-vm-key.pem

            docker system prune -a -f
          # Transfer required files
          scp -o StrictHostKeyChecking=no -i azure-vm-key.pem .env docker-compose.yml "$VM_USER@$VM_IP:/home/$VM_USER/"

          # Deploy using docker-compose
          ssh -o StrictHostKeyChecking=no -i azure-vm-key.pem "$VM_USER@$VM_IP" << EOF
            set -e
            echo "Deploying application on Azure VM..."
            
            # Login to DockerHub
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            # Stop existing containers
            docker-compose down || true

            # Pull latest images and start services
            docker-compose pull
            docker-compose up -d

            echo "Deployment completed!"
          EOF
