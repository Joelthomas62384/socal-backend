name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:alpine
        ports:
          - 6379:6379

    steps:
      # Step 1: Check out the repository code
      - name: Check out code
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx for multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub (for pushing images)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Create .env file from GitHub Secrets
      - name: Create .env file
        run: |
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
          echo "FRONT_END=${{ secrets.FRONT_END }}" >> .env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
          echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> .env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "DEBUG=${{ secrets.DEBUG }}" >> .env
          echo "CELERY_BROKER_URL=${{ secrets.CELERY_BROKER_URL }}" >> .env
          echo "CELERY_RESULT_BACKEND=${{ secrets.CELERY_RESULT_BACKEND }}" >> .env

      # Step 5: Build and push Docker images for Django and Celery
      - name: Build and push web image
        run: |
          docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/mysite-web:${{ github.sha }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/mysite-web:${{ github.sha }}

      - name: Build and push celery image
        run: |
          docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/mysite-celery:${{ github.sha }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/mysite-celery:${{ github.sha }}

      # Step 6: Run tests with docker-compose using the .env file
      - name: Run tests with docker-compose
        run: |
          docker-compose --env-file .env up -d
          docker-compose exec web python manage.py test
          docker-compose down

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Production
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: echo "Deployment steps go here"
