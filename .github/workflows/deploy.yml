name: Deploy on AWS

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Dockerhub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run : |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/friendbook:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/friendbook:latest

    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh/
        echo "${{ secrets.AWS_EC2_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.AWS_EC2_IP }} >> ~/.ssh/known_hosts
    - name: Setup .env
      run : | 
        echo "GOOGLE_CLIENT_ID = ${{secrets.GOOGLE_CLIENT_ID}}" > .env
        echo "AWS_ACCESS_KEY_ID = ${{secrets.AWS_ACCESS_KEY_ID}}" > .env
        echo "AWS_SECRET_ACCESS_KEY = ${{secrets.AWS_SECRET_ACCESS_KEY}}" > .env
        echo "DATABASE_URL = ${{secrets.DATABASE_URL}}" > .env
        echo "DEBUG = ${{secrets.DEBUG}}" > .env
        echo "EC2_USER = ${{secrets.EC2_USER}}" > .env
        echo "FRONT_END = ${{secrets.FRONT_END}}" > .env
        echo "GOOGLE_CLIENT_SECRET = ${{secrets.GOOGLE_CLIENT_SECRET}}" > .env
        echo "POSTGRES_DB = ${{secrets.POSTGRES_DB}}" > .env
        echo "POSTGRES_HOST = ${{secrets.POSTGRES_HOST}}" > .env
        echo "POSTGRES_PASSWORD = ${{secrets.POSTGRES_PASSWORD}}" > .env
        echo "POSTGRES_USER = ${{secrets.POSTGRES_USER}}" > .env
       

    - name: Deploy on AWS EC2 
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ secrets.AWS_EC2_IP }} << 'EOF'
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker pull ${{ secrets.DOCKER_USERNAME }}/friendbook:latest
          docker pull redis:latest
          docker pull celery:latest
          docker pull celery-beat:latest
          docker stop friendbook celery celery-beat redis || true
          docker rm friendbook celery celery-beat redis || true


          docker run -d --name redis redis:latest
          docker run --name friendbook -p 80:8000 --link redis $DOCKER_USERNAME/friendbook:latest
          docker run -d --name celery --link redis --link friendbook $DOCKER_USERNAME/friendbook:latest celery -A mysite worker -l info
          docker run -d --name celery-beat --link redis --link friendbook $DOCKER_USERNAME/friendbook:latest celery -A mysite beat -l info

        EOF